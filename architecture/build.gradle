plugins {
    id 'org.jetbrains.kotlin.multiplatform'
    id 'edu.wpi.first.GradleRIO'
    id 'org.jetbrains.dokka' version "$dokka_version"
}

kotlin {
    jvm('jvmfrc') {
        withJava()

        // TODO dont hardcode this
        // jvmfrcTest automatically tries to run commonTest but crashes since jvmfrcTest doesn't have any dependencies,
        // so jvmfrc testing tasks need to be manually disabled
        ['compileTestKotlinJvmfrc', 'jvmfrcTest'].each {
            tasks.findByName(it).enabled = false
        }
    }

    jvm('jvmsim')

    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
                implementation files('../uoms/libs/uoms-metadata-1.0.0.jar')
            }
        }

        commonTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test-common"
                implementation "org.jetbrains.kotlin:kotlin-test-annotations-common"
            }
        }

        jvmfrcMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
                api files('../uoms/libs/uoms-jvm-1.0.0.jar')

                // Kotlin multiplatform DSL is dumb and can't handle dependencies in lists
                wpi.deps.wpilib().each { implementation it }  // implementation wpi.deps.wpilib()
                wpi.deps.vendor.java().each { implementation it }  // implementation wpi.deps.vendor.java()
            }
        }

        jvmsimMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
                implementation files('../uoms/libs/uoms-jvm-1.0.0.jar')
            }
        }

        jvmsimTest {
            dependencies {
                implementation kotlin('test-junit')
            }
        }
    }
}

dokka {
    outputDirectory = '../docs'
    outputFormat = 'html'
    multiplatform {
        jvmfrc {}
    }
}
