plugins {
    id 'org.jetbrains.kotlin.multiplatform'
    id 'edu.wpi.first.GradleRIO'
    id 'org.jetbrains.dokka' version "$dokka_version"
}

kotlin {
    jvm('jvmfrc') {
        withJava()
    }

    jvm('jvmsim')

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$coroutines_version"
//                api project(':uoms')
                implementation files('../uoms/libs/uoms-metadata-1.0.0.jar')
            }
        }

        commonTest {
            dependencies {
                implementation kotlin('test-annotations-common')
            }
        }

        jvmfrcMain {
            dependsOn commonMain

            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation kotlin('reflect')
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
                api files('../uoms/libs/uoms-jvm-1.0.0.jar')

                wpi.deps.wpilib().each { implementation it }
                wpi.deps.vendor.java().each { implementation it }
            }
        }

        jvmsimMain {
            dependsOn commonMain

            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation kotlin('reflect')
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
                implementation files('../uoms/libs/uoms-jvm-1.0.0.jar')
            }
        }

        jvmsimTest {
            dependsOn commonTest

            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
    }
}

dokka {
    outputDirectory = "../docs"
    outputFormat = "html"
    multiplatform {
        jvmfrc {}
    }
}
