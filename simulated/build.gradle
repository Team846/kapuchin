apply plugin: 'kotlin-platform-jvm'
apply plugin: 'jacoco'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'

    implementation project(':uoms:jvm')
    expectedBy project(":architecture")

    testImplementation 'junit:junit:4.12'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}

group 'com.lynbrookrobotics'
version '1.0.0'

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs += ["-XXLanguage:+InlineClasses"]
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs += ["-XXLanguage:+InlineClasses"]
}

test {
    // on the RoboRIO, we get ~100m of heap to run our code
    jvmArgs '-Xmx100m', '-XX:+UseG1GC', '-XX:MaxGCPauseMillis=50'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}
check.dependsOn jacocoTestReport